1.Based on a Student ID, display a list of all the classes taken and grades for each class.

SELECT C.code,SCP.grade
FROM class C
JOIN student_class_professor SCP
ON C.id=SCP.class_id_fk
WHERE student_id_fk = 1


2.Display a list of all graduate students (the ones who has finished all classes)

SELECT SCP.student_id_fk
FROM student_class_professor SCP
JOIN student S
ON S.id = SCP.student_id_fk
WHERE end_date IS NOT NULL
AND SCP.grade BETWEEN 60 AND 100
AND S.status= 'grad'
GROUP BY student_id_fk
HAVING  COUNT(SCP.class_id_fk)= 10


3.Based on a Faculty ID, display a list of all the courses he or she has taught and the number of times taught and sorted by the ones taught the most.

SELECT C.code,COUNT(SCP.class_id_fk) AS Total_Count
FROM class C 
JOIN student_class_professor SCP
JOIN professor P
ON C.id = SCP.class_id_fk
AND P.id = SCP.professor_id_fk
where SCP.professor_id_fk = 1
GROUP BY SCP.class_id_fk
ORDER BY Total_count DESC


4.Display a list of all the student’s name and GPA, starting by the greatest GPAs.

SELECT S.name,AVG(SCP.grade),
IF(AVG(SCP.grade)>=90,'4.0',IF(AVG(SCP.grade)>=80,'3.0',IF(AVG(SCP.grade)>=70,'2.0','1.0'))) AS GPA
FROM student S
JOIN student_class_professor SCP
ON S.id = SCP.student_id_fk
WHERE end_date IS NOT NULL
GROUP BY SCP.student_id_fk
ORDER BY GPA DESC


5.Get the current class and professor’s name and age for all students who are in the program for less than three months, starting by the most recent students.

SELECT C.name AS Class_Name, P.name AS Professor_Name, 2018-YEAR(date_of_birth) as student_age
FROM class C
JOIN professor P
JOIN student S
JOIN student_class_professor SCP
ON P.id= C.professor_id_fk
AND S.id=SCP.student_id_fk
AND C.id= SCP.class_id_fk
WHERE SCP.end_date IS NULL
AND S.registration_date > DATE_SUB(NOW(), INTERVAL 3 MONTH)
ORDER BY S.registration_date DESC


6.Display the professor name, tenure and current class, grouped by the professor’s department.

SELECT P.name as professor_name, P.tenure,P.department, C.code  as current_course
FROM professor P
JOIN class C
JOIN student S
JOIN student_class_professor SCP
ON P.id=SCP.professor_id_fk
AND S.id=SCP.student_id_fk
AND C.id=SCP.class_id_fk
WHERE SCP.end_date IS NULL
GROUP BY P.department


7.Display name, description and current professor for all the classes offered (the ones having at least one student registered).



SELECT C.name As Class_Name, C.description as Discription, P.name as Professor_Name, COUNT(SCP.student_id_fk) as Total_Student
FROM class C 
JOIN professor P 
JOIN student S 
JOIN student_class_professor SCP 
ON P.id= SCP.professor_id_fk 
AND S.id=SCP.student_id_fk 
AND C.id= SCP.class_id_fk 
WHERE SCP.end_date IS NULL
GROUP BY SCP.class_id_fk 
HAVING Total_Student > 0
